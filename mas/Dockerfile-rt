FROM nvcr.io/nvidia/cuda:11.2.2-cudnn8-devel-ubuntu18.04

RUN apt update && \
    apt install wget -y

# TensorRT
RUN mkdir /tmp/tensorrt && \
    cd /tmp/tensorrt && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libcudnn8_8.3.2.44-1+cuda11.5_amd64.deb --no-check-certificate && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libnvinfer8_8.2.3-1+cuda11.4_amd64.deb --no-check-certificate && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libnvinfer-plugin8_8.2.3-1+cuda11.4_amd64.deb --no-check-certificate && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libnvonnxparsers8_8.2.3-1+cuda11.4_amd64.deb --no-check-certificate && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libnvparsers8_8.2.3-1+cuda11.4_amd64.deb --no-check-certificate 
#    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/./python3-libnvinfer_8.2.3-1+cuda11.4_amd64.deb

#RUN cd /tmp/tensorrt && \
#    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libcudnn8-dev_8.3.2.44-1+cuda11.5_amd64.deb && \
#    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libnvinfer-dev_8.2.3-1+cuda11.4_amd64.deb && \
#    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libnvinfer-plugin-dev_8.2.3-1+cuda11.4_amd64.deb && \
#    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libnvonnxparsers-dev_8.2.3-1+cuda11.4_amd64.deb && \
#    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/libnvparsers-dev_8.2.3-1+cuda11.4_amd64.deb && \
#    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/python3-libnvinfer-dev_8.2.3-1+cuda11.4_amd64.deb

RUN cd /tmp/tensorrt && \
	dpkg -i *.deb && \
	ldconfig

RUN rm -rf /var/lib/apt/lists/*

RUN apt update \
&&	apt install python3-pip -y

RUN pip3 install cmake

RUN apt install pkg-config -y \
	libavcodec-dev \
	libavformat-dev \
	libswscale-dev \
	libopencv-dev \
	libgstreamer1.0-dev \
	libgstreamer-plugins-base1.0-dev \
	libboost1.65-dev \
	libboost-thread1.65-dev \
	libboost-system1.65-dev \
	libboost-chrono1.65-dev

#ENV PATH=/usr/local/cuda-11.2/bin${PATH:+:${PATH}}
#ENV LD_LIBRARY_PATH=/usr/local/cuda-11.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
